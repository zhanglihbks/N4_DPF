<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Obj\STM32_FSMC_TFT_9325.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Obj\STM32_FSMC_TFT_9325.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, RVCT4.0 [Build 524]: Last Updated: Sun Jan 09 20:42:03 2011
<BR><P>
<H3>Maximum Stack Usage =        104 bytes + Unknown(Functions without stacksize, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
EXTI9_5_IRQHandler &rArr; ChuPing_IT &rArr; Menu_5 &rArr; Draw_Bottom &rArr; LCD_DrawRectFill &rArr; LCD_WindowModeDisable &rArr; LCD_SetDisplayWindow &rArr; LCD_SetCursor
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[ddaefc]">__WFI</a>
 <LI><a href="#[ddaec0]">__WFE</a>
 <LI><a href="#[ddae84]">__SEV</a>
 <LI><a href="#[ddae48]">__ISB</a>
 <LI><a href="#[ddae0c]">__DSB</a>
 <LI><a href="#[ddadd0]">__DMB</a>
 <LI><a href="#[ddad94]">__SVC</a>
 <LI><a href="#[ddad58]">__MRS_CONTROL</a>
 <LI><a href="#[ddad1c]">__MSR_CONTROL</a>
 <LI><a href="#[ddace0]">__MRS_PSP</a>
 <LI><a href="#[ddaca4]">__MSR_PSP</a>
 <LI><a href="#[ddac68]">__MRS_MSP</a>
 <LI><a href="#[ddac2c]">__MSR_MSP</a>
 <LI><a href="#[ddabf0]">__RESETPRIMASK</a>
 <LI><a href="#[ddabb4]">__SETPRIMASK</a>
 <LI><a href="#[ddab78]">__READ_PRIMASK</a>
 <LI><a href="#[ddab3c]">__SETFAULTMASK</a>
 <LI><a href="#[ddab00]">__RESETFAULTMASK</a>
 <LI><a href="#[ddaac4]">__READ_FAULTMASK</a>
 <LI><a href="#[ddaa88]">__BASEPRICONFIG</a>
 <LI><a href="#[ddaa4c]">__GetBASEPRI</a>
 <LI><a href="#[ddaa10]">__REV_HalfWord</a>
 <LI><a href="#[dda9d4]">__REV_Word</a>
 <LI><a href="#[dda6c8]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[dda704]">Reset_Handler</a>
 <LI><a href="#[ddee44]">NMIException</a>
 <LI><a href="#[ddee08]">HardFaultException</a>
 <LI><a href="#[ddedcc]">MemManageException</a>
 <LI><a href="#[dded90]">BusFaultException</a>
 <LI><a href="#[dded54]">UsageFaultException</a>
 <LI><a href="#[ddecdc]">SVCHandler</a>
 <LI><a href="#[dded18]">DebugMonitor</a>
 <LI><a href="#[ddeca0]">PendSVC</a>
 <LI><a href="#[ddec64]">SysTickHandler</a>
 <LI><a href="#[ddec28]">WWDG_IRQHandler</a>
 <LI><a href="#[ddebec]">PVD_IRQHandler</a>
 <LI><a href="#[ddebb0]">TAMPER_IRQHandler</a>
 <LI><a href="#[ddeb74]">RTC_IRQHandler</a>
 <LI><a href="#[ddeb38]">FLASH_IRQHandler</a>
 <LI><a href="#[ddeafc]">RCC_IRQHandler</a>
 <LI><a href="#[ddeac0]">EXTI0_IRQHandler</a>
 <LI><a href="#[ddea84]">EXTI1_IRQHandler</a>
 <LI><a href="#[ddeebc]">EXTI2_IRQHandler</a>
 <LI><a href="#[ddee80]">EXTI3_IRQHandler</a>
 <LI><a href="#[ddea48]">EXTI4_IRQHandler</a>
 <LI><a href="#[ddea0c]">DMA1_Channel1_IRQHandler</a>
 <LI><a href="#[dde9d0]">DMA1_Channel2_IRQHandler</a>
 <LI><a href="#[dde994]">DMA1_Channel3_IRQHandler</a>
 <LI><a href="#[dde958]">DMA1_Channel4_IRQHandler</a>
 <LI><a href="#[dde91c]">DMA1_Channel5_IRQHandler</a>
 <LI><a href="#[dde8e0]">DMA1_Channel6_IRQHandler</a>
 <LI><a href="#[dde8a4]">DMA1_Channel7_IRQHandler</a>
 <LI><a href="#[dde868]">ADC1_2_IRQHandler</a>
 <LI><a href="#[dde82c]">USB_HP_CAN_TX_IRQHandler</a>
 <LI><a href="#[dde7f0]">USB_LP_CAN_RX0_IRQHandler</a>
 <LI><a href="#[dde7b4]">CAN_RX1_IRQHandler</a>
 <LI><a href="#[dde778]">CAN_SCE_IRQHandler</a>
 <LI><a href="#[ddeef8]">EXTI9_5_IRQHandler</a>
 <LI><a href="#[dde73c]">TIM1_BRK_IRQHandler</a>
 <LI><a href="#[dde700]">TIM1_UP_IRQHandler</a>
 <LI><a href="#[dde6c4]">TIM1_TRG_COM_IRQHandler</a>
 <LI><a href="#[dde688]">TIM1_CC_IRQHandler</a>
 <LI><a href="#[dde64c]">TIM2_IRQHandler</a>
 <LI><a href="#[dde610]">TIM3_IRQHandler</a>
 <LI><a href="#[dde5d4]">TIM4_IRQHandler</a>
 <LI><a href="#[dde598]">I2C1_EV_IRQHandler</a>
 <LI><a href="#[dde55c]">I2C1_ER_IRQHandler</a>
 <LI><a href="#[dde520]">I2C2_EV_IRQHandler</a>
 <LI><a href="#[dde4e4]">I2C2_ER_IRQHandler</a>
 <LI><a href="#[dde4a8]">SPI1_IRQHandler</a>
 <LI><a href="#[dde46c]">SPI2_IRQHandler</a>
 <LI><a href="#[dde430]">USART1_IRQHandler</a>
 <LI><a href="#[dde3f4]">USART2_IRQHandler</a>
 <LI><a href="#[dde3b8]">USART3_IRQHandler</a>
 <LI><a href="#[dde37c]">EXTI15_10_IRQHandler</a>
 <LI><a href="#[dde340]">RTCAlarm_IRQHandler</a>
 <LI><a href="#[dde304]">USBWakeUp_IRQHandler</a>
 <LI><a href="#[dde2c8]">TIM8_BRK_IRQHandler</a>
 <LI><a href="#[dde28c]">TIM8_UP_IRQHandler</a>
 <LI><a href="#[dde250]">TIM8_TRG_COM_IRQHandler</a>
 <LI><a href="#[dde214]">TIM8_CC_IRQHandler</a>
 <LI><a href="#[dde1d8]">ADC3_IRQHandler</a>
 <LI><a href="#[dde19c]">FSMC_IRQHandler</a>
 <LI><a href="#[dde160]">SDIO_IRQHandler</a>
 <LI><a href="#[dde124]">TIM5_IRQHandler</a>
 <LI><a href="#[dde0e8]">SPI3_IRQHandler</a>
 <LI><a href="#[dde0ac]">UART4_IRQHandler</a>
 <LI><a href="#[dde070]">UART5_IRQHandler</a>
 <LI><a href="#[dde034]">TIM6_IRQHandler</a>
 <LI><a href="#[dddff8]">TIM7_IRQHandler</a>
 <LI><a href="#[dddfbc]">DMA2_Channel1_IRQHandler</a>
 <LI><a href="#[dddf80]">DMA2_Channel2_IRQHandler</a>
 <LI><a href="#[dddf44]">DMA2_Channel3_IRQHandler</a>
 <LI><a href="#[dddf08]">DMA2_Channel4_5_IRQHandler</a>
 <LI><a href="#[e4e620]">__main</a>
 <LI><a href="#[e4a78c]">__I$use$semihosting</a>
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[e4e620]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[e48248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[e4e4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[e48248]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[e4e620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[e4820c]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e4e4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[e481d0]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[e48194]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[e47ff0]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e47ff0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[e47ff0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[e47f00]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[e4d6e4]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[e4e044]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[e4bbb4]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002A))

<P><STRONG><a name="[e4bc2c]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000028))

<P><STRONG><a name="[e4bfec]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[e4be84]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[e4bac4]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[e4bb3c]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[e4befc]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[e4be0c]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[e4c3e8]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000006))

<P><STRONG><a name="[e4c244]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000D))

<P><STRONG><a name="[e4c1cc]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))

<P><STRONG><a name="[e4c154]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[e4c0dc]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[e4c064]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[e4c2f8]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[e4ba88]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002F))

<P><STRONG><a name="[e4bf74]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[e4bd94]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[e4c370]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000008))

<P><STRONG><a name="[e4aad4]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[e4b308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[e49e68]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[e49c88]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[e49c4c]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[e49db4]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[e49f1c]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))

<P><STRONG><a name="[e49d3c]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B))

<P><STRONG><a name="[e4e4f4]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[e4820c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[e4e620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[e4e0f8]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[e4dd74]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[e4dc48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[e4e044]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[e4d6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[e4e080]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[e4df90]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; FSMC_LCD_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ddf6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[e4dae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[e4dfcc]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[e4cf64]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[e4dae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[e4b308]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[e4aad4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[e4b344]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[e4b2cc]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[e4afc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[ddf6b4]"></a>main</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = main &rArr; FSMC_LCD_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ddf4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
<LI><a href="#[ddf510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Init
<LI><a href="#[ddf54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[ddf588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Configuration
<LI><a href="#[ddf5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Setup
<LI><a href="#[ddf600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HomePage_Disp
<LI><a href="#[ddf63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_LCD_Init
<LI><a href="#[ddf678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[e4df90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[ddeef8]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, stm32f10x_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = EXTI9_5_IRQHandler &rArr; ChuPing_IT &rArr; Menu_5 &rArr; Draw_Bottom &rArr; LCD_DrawRectFill &rArr; LCD_WindowModeDisable &rArr; LCD_SetDisplayWindow &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[ddde54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetITStatus
<LI><a href="#[ddde90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
<LI><a href="#[dddecc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChuPing_IT
<LI><a href="#[ddf204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[ddeebc]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, stm32f10x_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EXTI2_IRQHandler &rArr; ZuoJian_IT &rArr; XuanZhongXianShi &rArr; LCD_DrawRectFill &rArr; LCD_WindowModeDisable &rArr; LCD_SetDisplayWindow &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[dddddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZuoJian_IT
<LI><a href="#[ddde54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetITStatus
<LI><a href="#[ddde90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
<LI><a href="#[ddf204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[ddee80]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, stm32f10x_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = EXTI3_IRQHandler &rArr; YouJian_IT &rArr; HomePage_Disp &rArr; LCD_DrawRectFill &rArr; LCD_WindowModeDisable &rArr; LCD_SetDisplayWindow &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[ddde18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YouJian_IT
<LI><a href="#[ddde54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetITStatus
<LI><a href="#[ddde90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
<LI><a href="#[ddf204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[ddee44]"></a>NMIException</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[ddee08]"></a>HardFaultException</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[ddedcc]"></a>MemManageException</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[dded90]"></a>BusFaultException</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[dded54]"></a>UsageFaultException</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[dded18]"></a>DebugMonitor</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[ddecdc]"></a>SVCHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[ddeca0]"></a>PendSVC</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[ddec64]"></a>SysTickHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[ddec28]"></a>WWDG_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[ddebec]"></a>PVD_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[ddebb0]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[ddeb74]"></a>RTC_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[ddeb38]"></a>FLASH_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[ddeafc]"></a>RCC_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[ddeac0]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[ddea84]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[ddea48]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[ddea0c]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[dde9d0]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[dde994]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[dde958]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[dde91c]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[dde8e0]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[dde8a4]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[dde868]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[dde82c]"></a>USB_HP_CAN_TX_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[dde7f0]"></a>USB_LP_CAN_RX0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[dde7b4]"></a>CAN_RX1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[dde778]"></a>CAN_SCE_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[dde73c]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[dde700]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[dde6c4]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[dde688]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[dde64c]"></a>TIM2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[dde610]"></a>TIM3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[dde5d4]"></a>TIM4_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[dde598]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[dde55c]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[dde520]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[dde4e4]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[dde4a8]"></a>SPI1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[dde46c]"></a>SPI2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[dde430]"></a>USART1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[dde3f4]"></a>USART2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[dde3b8]"></a>USART3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[dde37c]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[dde340]"></a>RTCAlarm_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[dde304]"></a>USBWakeUp_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[dde2c8]"></a>TIM8_BRK_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[dde28c]"></a>TIM8_UP_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[dde250]"></a>TIM8_TRG_COM_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[dde214]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[dde1d8]"></a>ADC3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[dde19c]"></a>FSMC_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[dde160]"></a>SDIO_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[dde124]"></a>TIM5_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[dde0e8]"></a>SPI3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[dde0ac]"></a>UART4_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[dde070]"></a>UART5_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[dde034]"></a>TIM6_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[dddff8]"></a>TIM7_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[dddfbc]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[dddf80]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[dddf44]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[dddf08]"></a>DMA2_Channel4_5_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[ddd8b4]"></a>LCD_WriteRAM</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ddb0a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gImage_Dis
<LI><a href="#[ddc888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPoint
<LI><a href="#[ddd1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ili9320_DrawPicture
<LI><a href="#[ddd3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawMonoPict
<LI><a href="#[ddd440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawRectFill
<LI><a href="#[ddd4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
<LI><a href="#[ddd4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAMWord
<LI><a href="#[ddd5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawChar
<LI><a href="#[ddd620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
</UL>

<P><STRONG><a name="[ddd878]"></a>LCD_WriteIndex</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ddc888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPoint
<LI><a href="#[ddd800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM_Prepare
</UL>

<P><STRONG><a name="[ddd83c]"></a>LCD_WriteReg</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ddc324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XiaoGuo_9
<LI><a href="#[ddc360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XiaoGuo_8
<LI><a href="#[ddc39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XiaoGuo_7
<LI><a href="#[ddc3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XiaoGuo_6
<LI><a href="#[ddc414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XiaoGuo_5
<LI><a href="#[ddc450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XiaoGuo_4
<LI><a href="#[ddc48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XiaoGuo_3
<LI><a href="#[ddc4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XiaoGuo_2
<LI><a href="#[ddc504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XiaoGuo_13
<LI><a href="#[ddc540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XiaoGuo_12
<LI><a href="#[ddc57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XiaoGuo_11
<LI><a href="#[ddc5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XiaoGuo_10
<LI><a href="#[ddc5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XiaoGuo_1
<LI><a href="#[ddc888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPoint
<LI><a href="#[ddd2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;address_set
<LI><a href="#[ddd56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDisplayWindow
<LI><a href="#[ddd65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor
<LI><a href="#[ddf5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Setup
</UL>

<P><STRONG><a name="[ddd800]"></a>LCD_WriteRAM_Prepare</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LCD_WriteRAM_Prepare
</UL>
<BR>[Calls]<UL><LI><a href="#[ddd878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[ddd2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;address_set
<LI><a href="#[ddd3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawMonoPict
<LI><a href="#[ddd440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawRectFill
<LI><a href="#[ddd4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
<LI><a href="#[ddd4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAMWord
<LI><a href="#[ddd5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawChar
<LI><a href="#[ddd620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
</UL>

<P><STRONG><a name="[ddd7c4]"></a>LCD_CtrlLinesConfig</STRONG> (Thumb, 258 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = LCD_CtrlLinesConfig &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ddd0f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[ddd134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[ddd1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ddf5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Setup
</UL>

<P><STRONG><a name="[ddf5c4]"></a>LCD_Setup</STRONG> (Thumb, 546 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = LCD_Setup &rArr; LCD_CtrlLinesConfig &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ddd134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[ddd170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[ddd7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_CtrlLinesConfig
<LI><a href="#[ddd83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteReg
<LI><a href="#[ddda58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[ddf6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ddd788]"></a>LCD_SetTextColor</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd.o(.text), UNUSED)

<P><STRONG><a name="[ddd74c]"></a>LCD_SetBackColor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd.o(.text), UNUSED)

<P><STRONG><a name="[ddd710]"></a>LCD_DisplayChar</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ddd5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayString
<LI><a href="#[ddd6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
</UL>

<P><STRONG><a name="[ddd6d4]"></a>LCD_DisplayStringLine</STRONG> (Thumb, 58 bytes, Stack size 20 bytes, lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ddd710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChar
</UL>
<BR>[Called By]<UL><LI><a href="#[ddd5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayString
<LI><a href="#[ddd698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ClearLine
</UL>

<P><STRONG><a name="[ddd698]"></a>LCD_ClearLine</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ddd6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
</UL>
<BR>[Called By]<UL><LI><a href="#[ddd5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayString
</UL>

<P><STRONG><a name="[ddd65c]"></a>LCD_SetCursor</STRONG> (Thumb, 24 bytes, Stack size 12 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[ddd83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[ddd404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawCircle
<LI><a href="#[ddd4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
<LI><a href="#[ddd56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDisplayWindow
<LI><a href="#[ddd5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayString
<LI><a href="#[ddd5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawChar
<LI><a href="#[ddd620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
</UL>

<P><STRONG><a name="[ddd620]"></a>LCD_Clear</STRONG> (Thumb, 102 bytes, Stack size 12 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_Clear &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[ddd65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor
<LI><a href="#[ddd800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM_Prepare
<LI><a href="#[ddd8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM
</UL>
<BR>[Called By]<UL><LI><a href="#[ddde18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YouJian_IT
<LI><a href="#[ddf600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HomePage_Disp
</UL>

<P><STRONG><a name="[ddd5e4]"></a>LCD_DrawChar</STRONG> (Thumb, 118 bytes, Stack size 28 bytes, lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ddd65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor
<LI><a href="#[ddd800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM_Prepare
<LI><a href="#[ddd8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM
</UL>

<P><STRONG><a name="[ddd5a8]"></a>LCD_DisplayString</STRONG> (Thumb, 188 bytes, Stack size 40 bytes, lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ddd65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor
<LI><a href="#[ddd698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ClearLine
<LI><a href="#[ddd6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[ddd710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChar
<LI><a href="#[ddda1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrLength
</UL>

<P><STRONG><a name="[ddd56c]"></a>LCD_SetDisplayWindow</STRONG> (Thumb, 56 bytes, Stack size 20 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_SetDisplayWindow &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[ddd65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor
<LI><a href="#[ddd83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[ddd1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ili9320_DrawPicture
<LI><a href="#[ddd440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawRectFill
<LI><a href="#[ddd530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WindowModeDisable
</UL>

<P><STRONG><a name="[ddd530]"></a>LCD_WindowModeDisable</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = LCD_WindowModeDisable &rArr; LCD_SetDisplayWindow &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[ddd56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDisplayWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[ddd440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawRectFill
</UL>

<P><STRONG><a name="[ddd4f4]"></a>LCD_WriteRAMWord</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_WriteRAMWord &rArr; LCD_WriteRAM_Prepare
</UL>
<BR>[Calls]<UL><LI><a href="#[ddd800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM_Prepare
<LI><a href="#[ddd8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM
</UL>
<BR>[Called By]<UL><LI><a href="#[ddd404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawCircle
<LI><a href="#[ddd4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
</UL>

<P><STRONG><a name="[ddd4b8]"></a>LCD_DrawLine</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ddd4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAMWord
<LI><a href="#[ddd65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor
<LI><a href="#[ddd800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM_Prepare
<LI><a href="#[ddd8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM
</UL>
<BR>[Called By]<UL><LI><a href="#[ddd47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawRect
</UL>

<P><STRONG><a name="[ddd47c]"></a>LCD_DrawRect</STRONG> (Thumb, 66 bytes, Stack size 20 bytes, lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ddd4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
</UL>

<P><STRONG><a name="[ddd440]"></a>LCD_DrawRectFill</STRONG> (Thumb, 82 bytes, Stack size 28 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LCD_DrawRectFill &rArr; LCD_WindowModeDisable &rArr; LCD_SetDisplayWindow &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[ddd530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WindowModeDisable
<LI><a href="#[ddd56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDisplayWindow
<LI><a href="#[ddd800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM_Prepare
<LI><a href="#[ddd8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM
</UL>
<BR>[Called By]<UL><LI><a href="#[ddc75c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Menu
<LI><a href="#[ddc798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XuanZhongXianShi
<LI><a href="#[ddc7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Bottom
<LI><a href="#[ddf600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HomePage_Disp
</UL>

<P><STRONG><a name="[ddd404]"></a>LCD_DrawCircle</STRONG> (Thumb, 246 bytes, Stack size 32 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = LCD_DrawCircle &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[ddd4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAMWord
<LI><a href="#[ddd65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor
</UL>
<BR>[Called By]<UL><LI><a href="#[ddc540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XiaoGuo_12
<LI><a href="#[ddc57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XiaoGuo_11
</UL>

<P><STRONG><a name="[ddd3c8]"></a>LCD_DrawMonoPict</STRONG> (Thumb, 74 bytes, Stack size 12 bytes, lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ddd800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM_Prepare
<LI><a href="#[ddd8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM
</UL>

<P><STRONG><a name="[ddd38c]"></a>LCD_PowerOn</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd.o(.text), UNUSED)

<P><STRONG><a name="[ddd350]"></a>LCD_DisplayOn</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd.o(.text), UNUSED)

<P><STRONG><a name="[ddd314]"></a>LCD_DisplayOff</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd.o(.text), UNUSED)

<P><STRONG><a name="[ddd2d8]"></a>address_set</STRONG> (Thumb, 98 bytes, Stack size 20 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = address_set &rArr; LCD_WriteRAM_Prepare
</UL>
<BR>[Calls]<UL><LI><a href="#[ddd800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM_Prepare
<LI><a href="#[ddd83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[ddc324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XiaoGuo_9
<LI><a href="#[ddc360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XiaoGuo_8
<LI><a href="#[ddc39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XiaoGuo_7
<LI><a href="#[ddc3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XiaoGuo_6
<LI><a href="#[ddc414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XiaoGuo_5
<LI><a href="#[ddc450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XiaoGuo_4
<LI><a href="#[ddc48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XiaoGuo_3
<LI><a href="#[ddc4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XiaoGuo_2
<LI><a href="#[ddc504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XiaoGuo_13
<LI><a href="#[ddc540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XiaoGuo_12
<LI><a href="#[ddc57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XiaoGuo_11
<LI><a href="#[ddc5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XiaoGuo_10
<LI><a href="#[ddc5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XiaoGuo_1
</UL>

<P><STRONG><a name="[ddd29c]"></a>test</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd.o(.text), UNUSED)

<P><STRONG><a name="[ddd260]"></a>test2</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd.o(.text), UNUSED)

<P><STRONG><a name="[ddd224]"></a>test1</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd.o(.text), UNUSED)

<P><STRONG><a name="[ddd1e8]"></a>ili9320_DrawPicture</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ddd56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDisplayWindow
<LI><a href="#[ddd8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM
</UL>

<P><STRONG><a name="[ddc888]"></a>SetPoint</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, jack2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SetPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[ddd83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteReg
<LI><a href="#[ddd878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteIndex
<LI><a href="#[ddd8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM
</UL>
<BR>[Called By]<UL><LI><a href="#[ddc810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispHanZi_24
<LI><a href="#[ddc84c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispHanZi_32
</UL>

<P><STRONG><a name="[ddc84c]"></a>DispHanZi_32</STRONG> (Thumb, 172 bytes, Stack size 40 bytes, jack2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = DispHanZi_32 &rArr; SetPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[ddc888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[ddf600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HomePage_Disp
</UL>

<P><STRONG><a name="[ddc810]"></a>DispHanZi_24</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, jack2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = DispHanZi_24 &rArr; SetPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[ddc888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[ddc75c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Menu
<LI><a href="#[ddc798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XuanZhongXianShi
<LI><a href="#[ddc7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Bottom
<LI><a href="#[ddf600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HomePage_Disp
</UL>

<P><STRONG><a name="[ddf600]"></a>HomePage_Disp</STRONG> (Thumb, 384 bytes, Stack size 8 bytes, jack2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HomePage_Disp &rArr; LCD_DrawRectFill &rArr; LCD_WindowModeDisable &rArr; LCD_SetDisplayWindow &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[ddc810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispHanZi_24
<LI><a href="#[ddc84c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispHanZi_32
<LI><a href="#[ddd440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawRectFill
<LI><a href="#[ddd620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[ddde18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YouJian_IT
<LI><a href="#[ddf6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ddc7d4]"></a>Draw_Bottom</STRONG> (Thumb, 196 bytes, Stack size 16 bytes, jack2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Draw_Bottom &rArr; LCD_DrawRectFill &rArr; LCD_WindowModeDisable &rArr; LCD_SetDisplayWindow &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[ddc810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispHanZi_24
<LI><a href="#[ddd440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawRectFill
</UL>
<BR>[Called By]<UL><LI><a href="#[ddc630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_5
<LI><a href="#[ddc66c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_4
<LI><a href="#[ddc6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_3
<LI><a href="#[ddc6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_2
<LI><a href="#[dddddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZuoJian_IT
<LI><a href="#[dddecc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChuPing_IT
</UL>

<P><STRONG><a name="[ddc798]"></a>XuanZhongXianShi</STRONG> (Thumb, 858 bytes, Stack size 16 bytes, jack2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = XuanZhongXianShi &rArr; LCD_DrawRectFill &rArr; LCD_WindowModeDisable &rArr; LCD_SetDisplayWindow &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[ddc810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispHanZi_24
<LI><a href="#[ddd440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawRectFill
</UL>
<BR>[Called By]<UL><LI><a href="#[dddddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZuoJian_IT
</UL>

<P><STRONG><a name="[ddc75c]"></a>Draw_Menu</STRONG> (Thumb, 406 bytes, Stack size 8 bytes, jack2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Draw_Menu &rArr; LCD_DrawRectFill &rArr; LCD_WindowModeDisable &rArr; LCD_SetDisplayWindow &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[ddc810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispHanZi_24
<LI><a href="#[ddcdb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[ddd440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawRectFill
</UL>
<BR>[Called By]<UL><LI><a href="#[dddddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZuoJian_IT
</UL>

<P><STRONG><a name="[ddc720]"></a>Menu_1</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, jack2.o(.text), UNUSED)

<P><STRONG><a name="[ddc6e4]"></a>Menu_2</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, jack2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Menu_2 &rArr; Draw_Bottom &rArr; LCD_DrawRectFill &rArr; LCD_WindowModeDisable &rArr; LCD_SetDisplayWindow &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[ddc5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XiaoGuo_10
<LI><a href="#[ddc7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Bottom
</UL>
<BR>[Called By]<UL><LI><a href="#[dddecc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChuPing_IT
</UL>

<P><STRONG><a name="[ddc6a8]"></a>Menu_3</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, jack2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Menu_3 &rArr; Draw_Bottom &rArr; LCD_DrawRectFill &rArr; LCD_WindowModeDisable &rArr; LCD_SetDisplayWindow &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[ddc414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XiaoGuo_5
<LI><a href="#[ddc7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Bottom
</UL>
<BR>[Called By]<UL><LI><a href="#[dddecc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChuPing_IT
</UL>

<P><STRONG><a name="[ddc66c]"></a>Menu_4</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, jack2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Menu_4 &rArr; Draw_Bottom &rArr; LCD_DrawRectFill &rArr; LCD_WindowModeDisable &rArr; LCD_SetDisplayWindow &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[ddc48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XiaoGuo_3
<LI><a href="#[ddc7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Bottom
</UL>
<BR>[Called By]<UL><LI><a href="#[dddecc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChuPing_IT
</UL>

<P><STRONG><a name="[ddc630]"></a>Menu_5</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, jack2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Menu_5 &rArr; Draw_Bottom &rArr; LCD_DrawRectFill &rArr; LCD_WindowModeDisable &rArr; LCD_SetDisplayWindow &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[ddc504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XiaoGuo_13
<LI><a href="#[ddc7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Bottom
</UL>
<BR>[Called By]<UL><LI><a href="#[dddecc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChuPing_IT
</UL>

<P><STRONG><a name="[dddecc]"></a>ChuPing_IT</STRONG> (Thumb, 292 bytes, Stack size 8 bytes, jack2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = ChuPing_IT &rArr; Menu_5 &rArr; Draw_Bottom &rArr; LCD_DrawRectFill &rArr; LCD_WindowModeDisable &rArr; LCD_SetDisplayWindow &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[ddc324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XiaoGuo_9
<LI><a href="#[ddc360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XiaoGuo_8
<LI><a href="#[ddc39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XiaoGuo_7
<LI><a href="#[ddc3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XiaoGuo_6
<LI><a href="#[ddc450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XiaoGuo_4
<LI><a href="#[ddc4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XiaoGuo_2
<LI><a href="#[ddc540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XiaoGuo_12
<LI><a href="#[ddc57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XiaoGuo_11
<LI><a href="#[ddc5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XiaoGuo_10
<LI><a href="#[ddc5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XiaoGuo_1
<LI><a href="#[ddc630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_5
<LI><a href="#[ddc66c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_4
<LI><a href="#[ddc6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_3
<LI><a href="#[ddc6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_2
<LI><a href="#[ddc7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Bottom
</UL>
<BR>[Called By]<UL><LI><a href="#[ddeef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
</UL>

<P><STRONG><a name="[dddddc]"></a>ZuoJian_IT</STRONG> (Thumb, 142 bytes, Stack size 8 bytes, jack2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = ZuoJian_IT &rArr; XuanZhongXianShi &rArr; LCD_DrawRectFill &rArr; LCD_WindowModeDisable &rArr; LCD_SetDisplayWindow &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[ddc75c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Menu
<LI><a href="#[ddc798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XuanZhongXianShi
<LI><a href="#[ddc7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Bottom
</UL>
<BR>[Called By]<UL><LI><a href="#[ddeebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_IRQHandler
</UL>

<P><STRONG><a name="[ddde18]"></a>YouJian_IT</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, jack2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = YouJian_IT &rArr; HomePage_Disp &rArr; LCD_DrawRectFill &rArr; LCD_WindowModeDisable &rArr; LCD_SetDisplayWindow &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[ddd620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[ddf600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HomePage_Disp
</UL>
<BR>[Called By]<UL><LI><a href="#[ddee80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI3_IRQHandler
</UL>

<P><STRONG><a name="[ddf4d4]"></a>SystemInit</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemInit
</UL>
<BR>[Calls]<UL><LI><a href="#[ddc090]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Called By]<UL><LI><a href="#[ddf6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ddf63c]"></a>FSMC_LCD_Init</STRONG> (Thumb, 92 bytes, Stack size 96 bytes, init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = FSMC_LCD_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ddbeec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NORSRAMInit
<LI><a href="#[ddbf28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NORSRAMCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[ddf6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ddf588]"></a>NVIC_Configuration</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = NVIC_Configuration &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ddbe38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[ddbe74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ddf6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ddf678]"></a>EXTI_Config</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = EXTI_Config &rArr; GPIO_EXTILineConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[ddbeb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_EXTILineConfig
<LI><a href="#[ddbf64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
<LI><a href="#[ddde90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[ddf6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ddf510]"></a>SPI_Flash_Init</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = SPI_Flash_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ddbdc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[ddbdfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
<LI><a href="#[ddd0f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[ddd134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[ddd1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ddf6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ddb118]"></a>Delay1</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dong.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ddb0dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_long
<LI><a href="#[ddc324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XiaoGuo_9
<LI><a href="#[ddc360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XiaoGuo_8
<LI><a href="#[ddc39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XiaoGuo_7
<LI><a href="#[ddc3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XiaoGuo_6
<LI><a href="#[ddc414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XiaoGuo_5
<LI><a href="#[ddc4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XiaoGuo_2
<LI><a href="#[ddc540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XiaoGuo_12
<LI><a href="#[ddc57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XiaoGuo_11
<LI><a href="#[ddc5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XiaoGuo_10
<LI><a href="#[ddc5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XiaoGuo_1
</UL>

<P><STRONG><a name="[ddb0dc]"></a>Delay_long</STRONG> (Thumb, 30 bytes, Stack size 4 bytes, dong.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ddb118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay1
</UL>

<P><STRONG><a name="[ddb0a0]"></a>gImage_Dis</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, dong.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gImage_Dis
</UL>
<BR>[Calls]<UL><LI><a href="#[ddd8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM
</UL>
<BR>[Called By]<UL><LI><a href="#[ddc324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XiaoGuo_9
<LI><a href="#[ddc360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XiaoGuo_8
<LI><a href="#[ddc39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XiaoGuo_7
<LI><a href="#[ddc3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XiaoGuo_6
<LI><a href="#[ddc414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XiaoGuo_5
<LI><a href="#[ddc450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XiaoGuo_4
<LI><a href="#[ddc48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XiaoGuo_3
<LI><a href="#[ddc4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XiaoGuo_2
<LI><a href="#[ddc504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XiaoGuo_13
<LI><a href="#[ddc540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XiaoGuo_12
<LI><a href="#[ddc57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XiaoGuo_11
<LI><a href="#[ddc5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XiaoGuo_10
<LI><a href="#[ddc5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XiaoGuo_1
</UL>

<P><STRONG><a name="[ddc5f4]"></a>XiaoGuo_1</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, dong.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = XiaoGuo_1 &rArr; gImage_Dis
</UL>
<BR>[Calls]<UL><LI><a href="#[ddb0a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gImage_Dis
<LI><a href="#[ddb118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay1
<LI><a href="#[ddd2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;address_set
<LI><a href="#[ddd83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[dddecc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChuPing_IT
</UL>

<P><STRONG><a name="[ddc4c8]"></a>XiaoGuo_2</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, dong.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = XiaoGuo_2 &rArr; gImage_Dis
</UL>
<BR>[Calls]<UL><LI><a href="#[ddb0a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gImage_Dis
<LI><a href="#[ddb118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay1
<LI><a href="#[ddd2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;address_set
<LI><a href="#[ddd83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[dddecc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChuPing_IT
</UL>

<P><STRONG><a name="[ddc48c]"></a>XiaoGuo_3</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, dong.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = XiaoGuo_3 &rArr; gImage_Dis
</UL>
<BR>[Calls]<UL><LI><a href="#[ddb0a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gImage_Dis
<LI><a href="#[ddd2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;address_set
<LI><a href="#[ddd83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[ddc66c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_4
</UL>

<P><STRONG><a name="[ddc450]"></a>XiaoGuo_4</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, dong.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = XiaoGuo_4 &rArr; gImage_Dis
</UL>
<BR>[Calls]<UL><LI><a href="#[ddb0a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gImage_Dis
<LI><a href="#[ddd2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;address_set
<LI><a href="#[ddd83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[dddecc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChuPing_IT
</UL>

<P><STRONG><a name="[ddc414]"></a>XiaoGuo_5</STRONG> (Thumb, 206 bytes, Stack size 24 bytes, dong.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = XiaoGuo_5 &rArr; gImage_Dis
</UL>
<BR>[Calls]<UL><LI><a href="#[ddb0a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gImage_Dis
<LI><a href="#[ddb118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay1
<LI><a href="#[ddd2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;address_set
<LI><a href="#[ddd83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[ddc6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_3
</UL>

<P><STRONG><a name="[ddc3d8]"></a>XiaoGuo_6</STRONG> (Thumb, 306 bytes, Stack size 16 bytes, dong.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = XiaoGuo_6 &rArr; gImage_Dis
</UL>
<BR>[Calls]<UL><LI><a href="#[ddb0a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gImage_Dis
<LI><a href="#[ddb118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay1
<LI><a href="#[ddd2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;address_set
<LI><a href="#[ddd83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[dddecc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChuPing_IT
</UL>

<P><STRONG><a name="[ddc39c]"></a>XiaoGuo_7</STRONG> (Thumb, 396 bytes, Stack size 24 bytes, dong.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = XiaoGuo_7 &rArr; gImage_Dis
</UL>
<BR>[Calls]<UL><LI><a href="#[ddb0a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gImage_Dis
<LI><a href="#[ddb118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay1
<LI><a href="#[ddd2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;address_set
<LI><a href="#[ddd83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[dddecc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChuPing_IT
</UL>

<P><STRONG><a name="[ddc360]"></a>XiaoGuo_8</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, dong.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = XiaoGuo_8 &rArr; gImage_Dis
</UL>
<BR>[Calls]<UL><LI><a href="#[ddb0a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gImage_Dis
<LI><a href="#[ddb118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay1
<LI><a href="#[ddd2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;address_set
<LI><a href="#[ddd83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[dddecc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChuPing_IT
</UL>

<P><STRONG><a name="[ddc324]"></a>XiaoGuo_9</STRONG> (Thumb, 382 bytes, Stack size 24 bytes, dong.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = XiaoGuo_9 &rArr; gImage_Dis
</UL>
<BR>[Calls]<UL><LI><a href="#[ddb0a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gImage_Dis
<LI><a href="#[ddb118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay1
<LI><a href="#[ddd2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;address_set
<LI><a href="#[ddd83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[dddecc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChuPing_IT
</UL>

<P><STRONG><a name="[ddc5b8]"></a>XiaoGuo_10</STRONG> (Thumb, 564 bytes, Stack size 16 bytes, dong.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = XiaoGuo_10 &rArr; gImage_Dis
</UL>
<BR>[Calls]<UL><LI><a href="#[ddb0a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gImage_Dis
<LI><a href="#[ddb118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay1
<LI><a href="#[ddd2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;address_set
<LI><a href="#[ddd83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[ddc6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_2
<LI><a href="#[dddecc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChuPing_IT
</UL>

<P><STRONG><a name="[ddc57c]"></a>XiaoGuo_11</STRONG> (Thumb, 286 bytes, Stack size 16 bytes, dong.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = XiaoGuo_11 &rArr; LCD_DrawCircle &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[ddb0a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gImage_Dis
<LI><a href="#[ddb118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay1
<LI><a href="#[ddd2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;address_set
<LI><a href="#[ddd404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawCircle
<LI><a href="#[ddd83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[dddecc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChuPing_IT
</UL>

<P><STRONG><a name="[ddc540]"></a>XiaoGuo_12</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, dong.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = XiaoGuo_12 &rArr; LCD_DrawCircle &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[ddb0a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gImage_Dis
<LI><a href="#[ddb118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay1
<LI><a href="#[ddd2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;address_set
<LI><a href="#[ddd404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawCircle
<LI><a href="#[ddd83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[dddecc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChuPing_IT
</UL>

<P><STRONG><a name="[ddc504]"></a>XiaoGuo_13</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, dong.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = XiaoGuo_13 &rArr; gImage_Dis
</UL>
<BR>[Calls]<UL><LI><a href="#[ddb0a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gImage_Dis
<LI><a href="#[ddd2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;address_set
<LI><a href="#[ddd83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[ddc630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_5
</UL>

<P><STRONG><a name="[ddaefc]"></a>__WFI</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, cortexm3_macro.o(.text), UNUSED)

<P><STRONG><a name="[ddaec0]"></a>__WFE</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, cortexm3_macro.o(.text), UNUSED)

<P><STRONG><a name="[ddae84]"></a>__SEV</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, cortexm3_macro.o(.text), UNUSED)

<P><STRONG><a name="[ddae48]"></a>__ISB</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, cortexm3_macro.o(.text), UNUSED)

<P><STRONG><a name="[ddae0c]"></a>__DSB</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, cortexm3_macro.o(.text), UNUSED)

<P><STRONG><a name="[ddadd0]"></a>__DMB</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, cortexm3_macro.o(.text), UNUSED)

<P><STRONG><a name="[ddad94]"></a>__SVC</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, cortexm3_macro.o(.text), UNUSED)

<P><STRONG><a name="[ddad58]"></a>__MRS_CONTROL</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, cortexm3_macro.o(.text), UNUSED)

<P><STRONG><a name="[ddad1c]"></a>__MSR_CONTROL</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, cortexm3_macro.o(.text), UNUSED)

<P><STRONG><a name="[ddace0]"></a>__MRS_PSP</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, cortexm3_macro.o(.text), UNUSED)

<P><STRONG><a name="[ddaca4]"></a>__MSR_PSP</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, cortexm3_macro.o(.text), UNUSED)

<P><STRONG><a name="[ddac68]"></a>__MRS_MSP</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, cortexm3_macro.o(.text), UNUSED)

<P><STRONG><a name="[ddac2c]"></a>__MSR_MSP</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, cortexm3_macro.o(.text), UNUSED)

<P><STRONG><a name="[ddabf0]"></a>__RESETPRIMASK</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, cortexm3_macro.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[dd4aac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_RESETPRIMASK
</UL>

<P><STRONG><a name="[ddabb4]"></a>__SETPRIMASK</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, cortexm3_macro.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[dd4ae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SETPRIMASK
</UL>

<P><STRONG><a name="[ddab78]"></a>__READ_PRIMASK</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, cortexm3_macro.o(.text), UNUSED)

<P><STRONG><a name="[ddab3c]"></a>__SETFAULTMASK</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, cortexm3_macro.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[dd4a70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SETFAULTMASK
</UL>

<P><STRONG><a name="[ddab00]"></a>__RESETFAULTMASK</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, cortexm3_macro.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[dd4a34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_RESETFAULTMASK
</UL>

<P><STRONG><a name="[ddaac4]"></a>__READ_FAULTMASK</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, cortexm3_macro.o(.text), UNUSED)

<P><STRONG><a name="[ddaa88]"></a>__BASEPRICONFIG</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, cortexm3_macro.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[dd49f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_BASEPRICONFIG
</UL>

<P><STRONG><a name="[ddaa4c]"></a>__GetBASEPRI</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, cortexm3_macro.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[dd49bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_GetBASEPRI
</UL>

<P><STRONG><a name="[ddaa10]"></a>__REV_HalfWord</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, cortexm3_macro.o(.text), UNUSED)

<P><STRONG><a name="[dda9d4]"></a>__REV_Word</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, cortexm3_macro.o(.text), UNUSED)

<P><STRONG><a name="[dda704]"></a>Reset_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_vector.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x_vector.o(RESET)
</UL>
<P><STRONG><a name="[dda6c8]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, stm32f10x_vector.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e4dc48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[dd7428]"></a>EXTI_DeInit</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f10x_exti.o(.text), UNUSED)

<P><STRONG><a name="[ddbf64]"></a>EXTI_Init</STRONG> (Thumb, 186 bytes, Stack size 0 bytes, stm32f10x_exti.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ddf678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Config
</UL>

<P><STRONG><a name="[dd73ec]"></a>EXTI_StructInit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_exti.o(.text), UNUSED)

<P><STRONG><a name="[dd73b0]"></a>EXTI_GenerateSWInterrupt</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_exti.o(.text), UNUSED)

<P><STRONG><a name="[dd7374]"></a>EXTI_GetFlagStatus</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_exti.o(.text), UNUSED)

<P><STRONG><a name="[dd7338]"></a>EXTI_ClearFlag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_exti.o(.text), UNUSED)

<P><STRONG><a name="[ddde54]"></a>EXTI_GetITStatus</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f10x_exti.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ddee80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI3_IRQHandler
<LI><a href="#[ddeebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_IRQHandler
<LI><a href="#[ddeef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
</UL>

<P><STRONG><a name="[ddde90]"></a>EXTI_ClearITPendingBit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_exti.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ddee80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI3_IRQHandler
<LI><a href="#[ddeebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_IRQHandler
<LI><a href="#[ddeef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
<LI><a href="#[ddf678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Config
</UL>

<P><STRONG><a name="[dd6bb8]"></a>FSMC_NORSRAMDeInit</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, stm32f10x_fsmc.o(.text), UNUSED)

<P><STRONG><a name="[dd6b7c]"></a>FSMC_NANDDeInit</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, stm32f10x_fsmc.o(.text), UNUSED)

<P><STRONG><a name="[dd6b40]"></a>FSMC_PCCARDDeInit</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, stm32f10x_fsmc.o(.text), UNUSED)

<P><STRONG><a name="[ddbeec]"></a>FSMC_NORSRAMInit</STRONG> (Thumb, 232 bytes, Stack size 0 bytes, stm32f10x_fsmc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ddf63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_LCD_Init
</UL>

<P><STRONG><a name="[dd6b04]"></a>FSMC_NANDInit</STRONG> (Thumb, 136 bytes, Stack size 12 bytes, stm32f10x_fsmc.o(.text), UNUSED)

<P><STRONG><a name="[dd6ac8]"></a>FSMC_PCCARDInit</STRONG> (Thumb, 130 bytes, Stack size 0 bytes, stm32f10x_fsmc.o(.text), UNUSED)

<P><STRONG><a name="[dd6a8c]"></a>FSMC_NORSRAMStructInit</STRONG> (Thumb, 114 bytes, Stack size 0 bytes, stm32f10x_fsmc.o(.text), UNUSED)

<P><STRONG><a name="[dd6a50]"></a>FSMC_NANDStructInit</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, stm32f10x_fsmc.o(.text), UNUSED)

<P><STRONG><a name="[dd6a14]"></a>FSMC_PCCARDStructInit</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, stm32f10x_fsmc.o(.text), UNUSED)

<P><STRONG><a name="[ddbf28]"></a>FSMC_NORSRAMCmd</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, stm32f10x_fsmc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ddf63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_LCD_Init
</UL>

<P><STRONG><a name="[dd69d8]"></a>FSMC_NANDCmd</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, stm32f10x_fsmc.o(.text), UNUSED)

<P><STRONG><a name="[dd699c]"></a>FSMC_PCCARDCmd</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, stm32f10x_fsmc.o(.text), UNUSED)

<P><STRONG><a name="[dd6960]"></a>FSMC_NANDECCCmd</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, stm32f10x_fsmc.o(.text), UNUSED)

<P><STRONG><a name="[dd6924]"></a>FSMC_GetECC</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_fsmc.o(.text), UNUSED)

<P><STRONG><a name="[dd68e8]"></a>FSMC_ITConfig</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, stm32f10x_fsmc.o(.text), UNUSED)

<P><STRONG><a name="[dd68ac]"></a>FSMC_GetFlagStatus</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, stm32f10x_fsmc.o(.text), UNUSED)

<P><STRONG><a name="[dd6870]"></a>FSMC_ClearFlag</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, stm32f10x_fsmc.o(.text), UNUSED)

<P><STRONG><a name="[dd6834]"></a>FSMC_GetITStatus</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, stm32f10x_fsmc.o(.text), UNUSED)

<P><STRONG><a name="[dd67f8]"></a>FSMC_ClearITPendingBit</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, stm32f10x_fsmc.o(.text), UNUSED)

<P><STRONG><a name="[dd6474]"></a>GPIO_DeInit</STRONG> (Thumb, 188 bytes, Stack size 8 bytes, stm32f10x_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dd9a20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>

<P><STRONG><a name="[dd6438]"></a>GPIO_AFIODeInit</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, stm32f10x_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dd9a20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>

<P><STRONG><a name="[ddd1ac]"></a>GPIO_Init</STRONG> (Thumb, 266 bytes, Stack size 20 bytes, stm32f10x_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ddd7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_CtrlLinesConfig
<LI><a href="#[ddf510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Init
</UL>

<P><STRONG><a name="[dd63fc]"></a>GPIO_StructInit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[dd63c0]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[dd6384]"></a>GPIO_ReadInputData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[dd6348]"></a>GPIO_ReadOutputDataBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[dd630c]"></a>GPIO_ReadOutputData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[ddd134]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ddd7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_CtrlLinesConfig
<LI><a href="#[ddf510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Init
<LI><a href="#[ddf5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Setup
</UL>

<P><STRONG><a name="[ddd170]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ddf5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Setup
</UL>

<P><STRONG><a name="[dd62d0]"></a>GPIO_WriteBit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[dd6294]"></a>GPIO_Write</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[dd6258]"></a>GPIO_PinLockConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[dd621c]"></a>GPIO_EventOutputConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[dd61e0]"></a>GPIO_EventOutputCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[dd61a4]"></a>GPIO_PinRemapConfig</STRONG> (Thumb, 104 bytes, Stack size 20 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[ddbeb0]"></a>GPIO_EXTILineConfig</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, stm32f10x_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIO_EXTILineConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[ddf678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Config
</UL>

<P><STRONG><a name="[dd4b9c]"></a>NVIC_DeInit</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, stm32f10x_nvic.o(.text), UNUSED)

<P><STRONG><a name="[dd4b60]"></a>NVIC_SCBDeInit</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, stm32f10x_nvic.o(.text), UNUSED)

<P><STRONG><a name="[ddbe38]"></a>NVIC_PriorityGroupConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f10x_nvic.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ddf588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Configuration
</UL>

<P><STRONG><a name="[ddbe74]"></a>NVIC_Init</STRONG> (Thumb, 154 bytes, Stack size 20 bytes, stm32f10x_nvic.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ddf588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Configuration
</UL>

<P><STRONG><a name="[dd4b24]"></a>NVIC_StructInit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f10x_nvic.o(.text), UNUSED)

<P><STRONG><a name="[dd4ae8]"></a>NVIC_SETPRIMASK</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32f10x_nvic.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ddabb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__SETPRIMASK
</UL>

<P><STRONG><a name="[dd4aac]"></a>NVIC_RESETPRIMASK</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32f10x_nvic.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ddabf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__RESETPRIMASK
</UL>

<P><STRONG><a name="[dd4a70]"></a>NVIC_SETFAULTMASK</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32f10x_nvic.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ddab3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__SETFAULTMASK
</UL>

<P><STRONG><a name="[dd4a34]"></a>NVIC_RESETFAULTMASK</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32f10x_nvic.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ddab00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__RESETFAULTMASK
</UL>

<P><STRONG><a name="[dd49f8]"></a>NVIC_BASEPRICONFIG</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, stm32f10x_nvic.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ddaa88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__BASEPRICONFIG
</UL>

<P><STRONG><a name="[dd49bc]"></a>NVIC_GetBASEPRI</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32f10x_nvic.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ddaa4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__GetBASEPRI
</UL>

<P><STRONG><a name="[dd4980]"></a>NVIC_GetCurrentPendingIRQChannel</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_nvic.o(.text), UNUSED)

<P><STRONG><a name="[dd4944]"></a>NVIC_GetIRQChannelPendingBitStatus</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, stm32f10x_nvic.o(.text), UNUSED)

<P><STRONG><a name="[dd4908]"></a>NVIC_SetIRQChannelPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_nvic.o(.text), UNUSED)

<P><STRONG><a name="[dd48cc]"></a>NVIC_ClearIRQChannelPendingBit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_nvic.o(.text), UNUSED)

<P><STRONG><a name="[dd4890]"></a>NVIC_GetCurrentActiveHandler</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_nvic.o(.text), UNUSED)

<P><STRONG><a name="[dd4854]"></a>NVIC_GetIRQChannelActiveBitStatus</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, stm32f10x_nvic.o(.text), UNUSED)

<P><STRONG><a name="[dd4818]"></a>NVIC_GetCPUID</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_nvic.o(.text), UNUSED)

<P><STRONG><a name="[dd47dc]"></a>NVIC_SetVectorTable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_nvic.o(.text), UNUSED)

<P><STRONG><a name="[dd47a0]"></a>NVIC_GenerateSystemReset</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f10x_nvic.o(.text), UNUSED)

<P><STRONG><a name="[dd4764]"></a>NVIC_GenerateCoreReset</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f10x_nvic.o(.text), UNUSED)

<P><STRONG><a name="[dd4728]"></a>NVIC_SystemLPConfig</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, stm32f10x_nvic.o(.text), UNUSED)

<P><STRONG><a name="[dd46ec]"></a>NVIC_SystemHandlerConfig</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, stm32f10x_nvic.o(.text), UNUSED)

<P><STRONG><a name="[dd46b0]"></a>NVIC_SystemHandlerPriorityConfig</STRONG> (Thumb, 98 bytes, Stack size 20 bytes, stm32f10x_nvic.o(.text), UNUSED)

<P><STRONG><a name="[dd4674]"></a>NVIC_GetSystemHandlerPendingBitStatus</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, stm32f10x_nvic.o(.text), UNUSED)

<P><STRONG><a name="[dd4638]"></a>NVIC_SetSystemHandlerPendingBit</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_nvic.o(.text), UNUSED)

<P><STRONG><a name="[dd45fc]"></a>NVIC_ClearSystemHandlerPendingBit</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32f10x_nvic.o(.text), UNUSED)

<P><STRONG><a name="[dd45c0]"></a>NVIC_GetSystemHandlerActiveBitStatus</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, stm32f10x_nvic.o(.text), UNUSED)

<P><STRONG><a name="[dd4584]"></a>NVIC_GetFaultHandlerSources</STRONG> (Thumb, 66 bytes, Stack size 12 bytes, stm32f10x_nvic.o(.text), UNUSED)

<P><STRONG><a name="[dd4548]"></a>NVIC_GetFaultAddress</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f10x_nvic.o(.text), UNUSED)

<P><STRONG><a name="[dd3abc]"></a>RCC_DeInit</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[dd3a80]"></a>RCC_HSEConfig</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[dd3a44]"></a>RCC_GetFlagStatus</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, stm32f10x_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[dd3a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_WaitForHSEStartUp
</UL>

<P><STRONG><a name="[dd3a08]"></a>RCC_WaitForHSEStartUp</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, stm32f10x_rcc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dd3a44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
</UL>

<P><STRONG><a name="[dd39cc]"></a>RCC_AdjustHSICalibrationValue</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[dd3990]"></a>RCC_HSICmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[dd3954]"></a>RCC_PLLConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[dd3918]"></a>RCC_PLLCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[dd38dc]"></a>RCC_SYSCLKConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[dd38a0]"></a>RCC_GetSYSCLKSource</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[dd3864]"></a>RCC_HCLKConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[dd3828]"></a>RCC_PCLK1Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[dd37ec]"></a>RCC_PCLK2Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[dd37b0]"></a>RCC_ITConfig</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[dd3774]"></a>RCC_USBCLKConfig</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[dd3738]"></a>RCC_ADCCLKConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[dd36fc]"></a>RCC_LSEConfig</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[dd36c0]"></a>RCC_LSICmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[dd3684]"></a>RCC_RTCCLKConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[dd3648]"></a>RCC_RTCCLKCmd</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[dd56a0]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 194 bytes, Stack size 12 bytes, stm32f10x_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[e51aa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2S_Init
</UL>

<P><STRONG><a name="[ddf54c]"></a>RCC_AHBPeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ddf6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ddd0f8]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ddd7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_CtrlLinesConfig
<LI><a href="#[ddf510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Init
</UL>

<P><STRONG><a name="[dd360c]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[dd9a20]"></a>RCC_APB2PeriphResetCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[dd6438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_AFIODeInit
<LI><a href="#[dd6474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DeInit
<LI><a href="#[e51adc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_DeInit
</UL>

<P><STRONG><a name="[dd8c10]"></a>RCC_APB1PeriphResetCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[e51adc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_DeInit
</UL>

<P><STRONG><a name="[dd93cc]"></a>RCC_BackupResetCmd</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[dd35d0]"></a>RCC_ClockSecuritySystemCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[dd3594]"></a>RCC_MCOConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[dd3558]"></a>RCC_ClearFlag</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[dd351c]"></a>RCC_GetITStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[dd34e0]"></a>RCC_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[e51adc]"></a>SPI_I2S_DeInit</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, stm32f10x_spi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dd8c10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
<LI><a href="#[dd9a20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>

<P><STRONG><a name="[ddbdc0]"></a>SPI_Init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stm32f10x_spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ddf510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Init
</UL>

<P><STRONG><a name="[e51aa0]"></a>I2S_Init</STRONG> (Thumb, 200 bytes, Stack size 56 bytes, stm32f10x_spi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dd56a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>

<P><STRONG><a name="[e51a64]"></a>SPI_StructInit</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[e51a28]"></a>I2S_StructInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[ddbdfc]"></a>SPI_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ddf510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Init
</UL>

<P><STRONG><a name="[e519ec]"></a>I2S_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[e519b0]"></a>SPI_I2S_ITConfig</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[e51974]"></a>SPI_I2S_DMACmd</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[e51938]"></a>SPI_I2S_SendData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[e518fc]"></a>SPI_I2S_ReceiveData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[e518c0]"></a>SPI_NSSInternalSoftwareConfig</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[e51884]"></a>SPI_SSOutputCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[e51848]"></a>SPI_DataSizeConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[e5180c]"></a>SPI_TransmitCRC</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[e517d0]"></a>SPI_CalculateCRC</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[e51794]"></a>SPI_GetCRC</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[e51758]"></a>SPI_GetCRCPolynomial</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[e5171c]"></a>SPI_BiDirectionalLineConfig</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[e516e0]"></a>SPI_I2S_GetFlagStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[e516a4]"></a>SPI_I2S_ClearFlag</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[e51668]"></a>SPI_I2S_GetITStatus</STRONG> (Thumb, 52 bytes, Stack size 20 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[e5162c]"></a>SPI_I2S_ClearITPendingBit</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[e4e788]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[e4e74c]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[e4e710]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[e4dc48]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[dda6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[e4d054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[e4dd74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[e4dae0]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e4cf64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[e4df90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[e4d090]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[e4d054]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e4dc48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[e4d018]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[e4afc0]"></a>_sys_exit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e4b2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[e4a78c]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> sys_exit.o(.text)
</UL>
<P><STRONG><a name="[e4a750]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[ddf204]"></a>Delay</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ddee80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI3_IRQHandler
<LI><a href="#[ddeebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_IRQHandler
<LI><a href="#[ddeef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
</UL>

<P><STRONG><a name="[ddda58]"></a>Delay</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ddf5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Setup
</UL>

<P><STRONG><a name="[ddda1c]"></a>StrLength</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lcd.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ddd5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayString
</UL>

<P><STRONG><a name="[ddcdb0]"></a>Delay</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, jack2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ddc75c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Menu
</UL>

<P><STRONG><a name="[ddc090]"></a>SetSysClock</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ddf4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
